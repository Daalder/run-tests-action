name: 'Daalder package tests'
description: 'Daalder package tests'
inputs:
  who-to-greet:  # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-id }}
runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get git commit data 1
      uses: rlespinasse/git-commit-data-action@1.1.0

    - name: Get git commit data 2
      shell: bash
      run: |
        echo "AUTHOR_FIRSTNAME=$(echo $GIT_COMMIT_AUTHOR_NAME | head -n1 | cut -d ' ' -f1 | sed -e 's/\(.*\)/\L\1/')" >> $GITHUB_ENV
        echo "GIT_SHORT_HASH=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV
        echo "GIT_BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

    - name: Configure sysctl limits (required for ES)
      shell: bash
      run: |
        sudo swapoff -a
        sudo sysctl -w vm.swappiness=1
        sudo sysctl -w fs.file-max=262144
        sudo sysctl -w vm.max_map_count=262144

    - name: Runs Elasticsearch
      uses: elastic/elastic-github-actions/elasticsearch@master
      with:
        stack-version: 6.8.14

    - name: Set up MySQL
      shell: bash
      run: |
        sudo /etc/init.d/mysql start
        mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -uroot -proot

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: curl, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, iconv
        coverage: none

    - name: Install dependencies
      shell: bash
      run: |
        composer config --global --auth http-basic.repo.packagist.com egbertwietses ${{ env.PACKAGIST_TOKEN }}
        composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
        composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

    - name: Setup Problem Matches
      shell: bash
      run: |
        echo "::add-matcher::${{ runner.tool_cache }}/php.json"
        echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Execute tests
      shell: bash
      run: vendor/bin/phpunit

    - name: Post failure status to Slack
      shell: bash
      run: |
        echo ${{ job.status }}
        echo "$( echo \"${{ job.status }}\" )"
        echo job.status
        curl -X POST -H "Authorization: Bearer $BEARER_TOKEN" "$BASE_URL?channel=$CHANNEL&link_names=true&pretty=1" \
            --data-urlencode "text=$(if [ \"${{ job.status }}\" == \"failure\" ]; then echo ':no_entry: daalder/feeds tests failed'; else echo ':white_check_mark: daalder/feeds tests succeeded'; fi) for $(echo '`')$(echo $GIT_BRANCH)$(echo '`') @ $(echo '`')<$(echo https://github.com/Daalder/feeds/commit/$GITHUB_SHA)|$GIT_SHORT_HASH>$(echo '`') $(if [ \"${{ job.status }}\" == \"failure\" ]; then echo 'by @'$AUTHOR_FIRSTNAME; fi) . Commit message: $(echo '`')$GIT_COMMIT_MESSAGE_SUBJECT$(echo '`')"
      env:
          BEARER_TOKEN: ${{ env.SLACK_BEARER_TOKEN }}
          BASE_URL: https://slack.com/api/chat.postMessage
          CHANNEL: programmers
      if: always() # Pick up events when the job fails or is canceled
