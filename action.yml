name: 'Daalder package tests'
description: 'Daalder package tests'
runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure sysctl limits (required for ES)
      shell: bash
      run: |
        sudo swapoff -a
        sudo sysctl -w vm.swappiness=1
        sudo sysctl -w fs.file-max=262144
        sudo sysctl -w vm.max_map_count=262144

    - name: Runs Elasticsearch
      uses: elastic/elastic-github-actions/elasticsearch@master
      with:
        stack-version: 6.8.14

    - name: Set up MySQL
      shell: bash
      run: |
        sudo /etc/init.d/mysql start
        mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -uroot -proot

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: curl, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, iconv
        coverage: none

    - name: Install dependencies
      shell: bash
      run: |
        sudo apt install --yes jq 
        composer config --global --auth http-basic.repo.packagist.com "Vincent van Hoven" ${{ env.PACKAGIST_TOKEN }}
        echo '{"http-basic": {"repo.packagist.com": {"username": "Vincent van Hoven", "password": "${{ env.PACKAGIST_TOKEN }}"}}}' > $GITHUB_WORKSPACE/auth.json
        composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
        composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

    - name: Setup Problem Matches
      shell: bash
      run: |
        echo "::add-matcher::${{ runner.tool_cache }}/php.json"
        echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Execute tests
      id: run_tests
      shell: bash
      run: vendor/bin/phpunit

    - name: Run Slack Notification
      uses: rohammosalli/slack-action@master
      env:
        SLACK_BOT_TOKEN: ${{ env.SLACK_BEARER_TOKEN }}
        SLACK_CHANNEL: "pipelines-notifications"
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        GITHUB_RUN_ID: ${{ github.run_id }}
        REPO_OWNER: ${{ github.repository_owner }}
        REPO_NAME: ${{ github.event.repository.name }}
        RUN_ID: ${{ github.run_id }}
        SEND_SUCCESS_MESSAGE: "true"
      if: always()
